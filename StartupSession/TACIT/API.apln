:namespace API


    ∇ R←ExecuteLocalTest arg;fld;fl;loc;xin
⍝:: Execute local test
⍝?: Execute local test (Syntax: ]ExecuteLocalTest {path}\TACIT.JSON [-Local=0|1] [-ExecIn=path]
⍝??: -File: mandatory, points to a TACIT.JSON-File.
⍝??: NB: the tests will be executed in the folder that contains -File, unless -ExecIn points to an existing, empty folder)
⍝Parse: 1L -file= -local=0 1 -execin=
      arg←##._Parse arg  ⍝ ensure its a parsed arg...
      nl←⎕UCS 13
      fld←1⊃⎕NPARTS fl←∊1 ⎕NPARTS (1 '' ##._getArg 1 arg)  ⍝ fld=folder, fl=path to a TACIT.json
      loc←0 0 ##._getArg'local'arg
      xin←0(1⊃⎕NPARTS fl)##._getArg'execin'arg
     
      ⎕←'fld=',fld
      ⎕←'fl=',fl
      ⎕←'loc=',loc
      ⎕←'xin=',xin
      R←''
      →0
      ∘∘∘
      'TACIT.JSON not found'⎕SIGNAL((~⎕NEXISTS fl)∨'tacit.json'≢⎕C∊1↓⎕NPARTS fl)/700
      :Trap 0
          specs←⎕JSON 1⊃⎕NGET fl
      :Else
          ('Error reading TACIT.JSON: ',nl,⎕JSON ⎕DMX)⎕SIGNAL 701
      :EndTrap
      :If xin≢1⊃⎕NPARTS fl
          'ExecIn is not an existing folder'⎕SIGNAL(~⎕NEXISTS xin)702
     
      :EndIf
    ∇



    ∇ R←Run arg
⍝:: this function may die or possibly have its name changed!
 ⍝ The calling-mechanism is up to you (JR), TACIT-Manager will be launched and it will be given a pointer to a repository (well, the URL of a repo)
 ⍝ and a "selector" of what needs testing (commit-sha or tag or branch)  I assume these values will be passed using EnvVars - maybe TACIT_URL and one of TACIT_SHA, TACIT_TAG, TACIT_BRANCH (Will actually use a default auf BRANCH=master)
     
      url←1 ##._getArg'URL'arg
      sha←0 ##._getArg'TACIT_SHA'
      tag←0 ##._getArg env'TACIT_TAG'
      bra←0 ##._getArg env'TACIT_BRANCH'
     
      :If 0=≢sha,tag,bra ⋄ 'Not one of the required EnvVars "TACIT_SHA", "TACIT_TAG" or "TACIT_BRANCH" was found!'⎕SIGNAL 11 ⋄ :EndIf
     
      ⎕←'TACIT launched on repo ',url
     
     
    ∇


:endnamespace
